version: '3.7'

services:
  hackathon-api:
    container_name: hackathon-backend
    image: docker-ext.drsbln.de/hackathon/hackathon-manager:backend
    working_dir: /usr/src/app
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=developer
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=hackathon
      - DB_USER=hackathonuser
      - DB_PASSWORD=secretpassword
    env_file:
      - ./backend/.env.dev
    depends_on:
      - mysql
    command: /bin/sh -c "npm install && npm run start-prod"

    labels:
      - 'traefik.enable=true'
      
      # API-Endpunkt: hackathon-stg.drsbln.de/api
      - 'traefik.http.routers.hackathonapi.priority=20'
      - 'traefik.http.routers.hackathonapi.tls=true'
      - 'traefik.http.routers.hackathonapi.rule=Host(`hackathon-stg.drsbln.de`) &&  Path(`/api`)'
      - 'traefik.http.routers.hackathonapi.entrypoints=websecure'
      - 'traefik.http.routers.hackathonapi.service=hackathonapi-service'

      # Health-Check-Endpunkt: hackathon-stg.drsbln.de/api/health
      - 'traefik.http.routers.hackathonhealth.priority=20'
      - 'traefik.http.routers.hackathonhealth.tls=true'
      - 'traefik.http.routers.hackathonhealth.rule=Host(`hackathon-stg.drsbln.de`) && Path(`/api/health`)'
      - 'traefik.http.routers.hackathonhealth.entrypoints=websecure'
      - 'traefik.http.routers.hackathonhealth.service=hackathonapi-service'

      # Metrics-Endpunkt: hackathon-stg.drsbln.de/metrics
      - 'traefik.http.routers.hackathonmetrics.priority=20'
      - 'traefik.http.routers.hackathonmetrics.tls=true'
      - 'traefik.http.routers.hackathonmetrics.rule=Host(`hackathon-stg.drsbln.de`) && Path(`/metrics`)'
      - 'traefik.http.routers.hackathonmetrics.entrypoints=websecure'
      - 'traefik.http.routers.hackathonmetrics.service=hackathonapi-service'

      # API-Dokumentation: hackathon-stg.drsbln.de/api-docs
      - 'traefik.http.routers.hackathondocs.priority=20'
      - 'traefik.http.routers.hackathondocs.tls=true'
      - 'traefik.http.routers.hackathondocs.rule=Host(`hackathon-stg.drsbln.de`) && Path(`/api-docs`)'
      - 'traefik.http.routers.hackathondocs.entrypoints=websecure'
      - 'traefik.http.routers.hackathondocs.service=hackathonapi-service'

      # Verknüpfung des API-Services mit dem Node.js Server (Port 3000)
      - 'traefik.http.services.hackathonapi-service.loadbalancer.server.port=3005'

    networks:
      - web
      - internal

  hackathon-frontend:
    container_name: hackathon-frontend
    image: docker-ext.drsbln.de/hackathon/hackathon-manager:frontend
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/nginx/nginx.conf:/etc/nginx/nginx.conf
    labels:
      - 'traefik.http.routers.hackathon.priority=1'
      - 'traefik.enable=true'

      # Hauptseite: hackathon-stg.drsbln.de ohne /api
      - 'traefik.http.routers.hackathon.rule=Host(`hackathon-stg.drsbln.de`) && PathPrefix(`/`)'
      - 'traefik.http.routers.hackathon.entrypoints=websecure'
      - 'traefik.http.services.hackathon.loadbalancer.server.port=80'

      # TLS für die Hauptseite aktivieren
      - 'traefik.http.routers.hackathon.tls=true'
      - 'traefik.http.routers.hackathon.tls.domains[0].main=drsbln.de'
      - 'traefik.http.routers.hackathon.tls.domains[0].sans=*.drsbln.de'
    depends_on:
      - hackathon-api
    networks:
      - web


  mysql:
    image: mysql:8.0
    container_name: hackathon-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: hackathon
      MYSQL_USER: hackathonuser
      MYSQL_PASSWORD: secretpassword
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - internal
      - web
      
volumes:
  mysql-data:

networks:
  web:
    external: true
  internal:
    driver: bridge