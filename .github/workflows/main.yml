name: Build, Push & Deploy Hackathon Manager

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment (staging/production)'
        required: true
        default: 'staging'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write  

    steps:
      - name: Sanitize branch name
        id: vars
        run: echo "branch=$(echo '${{ github.ref_name }}' | tr '/' '-' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/hackathon-frontend:${{ steps.vars.outputs.branch }}

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/hackathon-backend:${{ steps.vars.outputs.branch }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.LOCAL_ANSIBLE_SSH_PRIVATE_KEY }}
          script: |
            export PROJECT_PATH="/opt/data/docker/containers/hackathon-manager"
            export DOCKER_COMPOSE_FILE="$PROJECT_PATH/docker-compose.yaml"

            # Determine deployment environment
            DEPLOY_ENV="${{ github.event.inputs.environment }}"
            if [ -z "$DEPLOY_ENV" ]; then
              DEPLOY_ENV="staging"
            fi
            echo "Deploying to environment: $DEPLOY_ENV"

            mkdir -p "$PROJECT_PATH"
            cd "$PROJECT_PATH"

            docker compose down --remove-orphans --timeout 30
            git config --global --add safe.directory "$PROJECT_PATH"
            git pull origin main

            if [ "$DEPLOY_ENV" = "production" ]; then
              sed -i 's/hackathon-stg.drsbln.de/hackathon.drsbln.de/g' "$DOCKER_COMPOSE_FILE"
              sed -i 's/hackathon-stg.drsbln.de/hackathon.drsbln.de/g' /DOCKER/containers/hackathon-manager/frontend/nginx/default.conf
            fi

            docker compose up -d --build
